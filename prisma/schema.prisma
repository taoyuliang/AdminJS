generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model s_routes {
  name           String?   @db.VarChar
  from           String?   @db.VarChar(3)
  stop           String?   @db.VarChar(3)
  to             String?   @db.VarChar(3)
  effective_date DateTime? @db.Date
  id             Int       @id(map: "pk") @default(autoincrement())
  uuid           String?   @db.VarChar
  arr            Json[]    @db.Json
}

model session {
  sid    String   @id @db.VarChar
  sess   Json     @db.Json
  expire DateTime @db.Timestamp(6)

  @@index([expire], map: "IDX_session_expire")
}

model supplier {
  name     String? @db.VarChar
  password String? @db.VarChar
  id       Int     @id(map: "id") @default(autoincrement())
  company  String? @db.VarChar
  Log      Log[]
}

model upload_file {
  s3Key   String? @db.VarChar
  bucket  String? @db.VarChar
  mime    String? @db.VarChar
  comment String?
  id      Int     @id @default(autoincrement())
}

model Log {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  recordId    Int
  recordTitle String?  @db.VarChar(128)
  difference  Json?    @db.Json
  action      String   @db.VarChar(128)
  resource    String   @db.VarChar(128)
  userId      String   @db.VarChar(128)
  supplier    supplier @relation(fields: [recordId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model User {
  id       Int     @id
  userId   String  @db.VarChar
  email    String? @db.VarChar
  password String? @db.VarChar
}
